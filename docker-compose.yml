services:
  app:
    build: ./golang-server
    ports:
      - "8080:8080"
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
      python-server: 
        condition: service_started

  python-server:
    build:
      context: ./python-server-ocr
    container_name: python_ocr_server
    ports:
      - "50051:50051"
    volumes:
      - ocr_model_cache:/root/.EasyOCR/

  db:
    image: postgres:latest
    ports:
      - "5432:5432"
    env_file:
      - .env
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5  
volumes:
  pgdata:
  ocr_model_cache:
